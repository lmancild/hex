# -------------------------------------------------
# GENERAL SETTINGS
# -------------------------------------------------
server.servlet.context-path=${context.path}
spring.application.name=${app.name}
endpoint.export.certificate.snp.save=${endpoint.export.certificate.snp.save}
endpoint.export.certificate.snp.generate=${endpoint.export.certificate.snp.generate}
endpoint.export.certificate.snp.confirm.preview=${endpoint.export.certificate.snp.confirm.preview}
endpoint.interop.response.snp.srncrcr020.m1014=${endpoint.interop.response.snp.srncrcr020.m1014}
endpoint.interop.response.snp.srncrcr020.m1017=${endpoint.interop.response.snp.srncrcr020.m1017}
webclient.retry=${webclient.retry}
# -------------------------------------------------
# DATABASE
# -------------------------------------------------
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=${db.url}
spring.datasource.username=${db.username}
spring.datasource.password=${db.password}
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# -------------------------------------------------
# HIKARICP  SETTINGS
# -------------------------------------------------
spring.datasource.hikari.minimumIdle=${hikari.idle}
spring.datasource.hikari.maximum-pool-size=${hikari.maximum-pool-size}
spring.datasource.hikari.idle-timeout=${hikari.idle.timeout}
spring.datasource.hikari.connection-timeout= ${hikari.connection-timeout}
spring.datasource.hikari.leak-detection-threshold= ${hikari.detection-thres}
# -------------------------------------------------
# LOGGING
# -------------------------------------------------
logging.file.name=${log.file.name}
logging.logback.rollingpolicy.max-file-size = ${log.max.file.size}
logging.logback.rollingpolicy.file-name-pattern = ${LOG_FILE}.%d{yyyy-MM-dd}.%i
logging.logback.rollingpolicy.max-history=${log.file.max-history}
logging.level.=${logger.info.level}
logging.level.cl.gob=${logger.app.level}
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
logging.level.com.querydsl.sql=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=INFO
# -------------------------------------------------
# RABBITMQ
# -------------------------------------------------
spring.rabbitmq.addresses=${rabbitmq.addresses}
spring.rabbitmq.port=${rabbitmq.port}
spring.rabbitmq.username=${rabbitmq.username}
spring.rabbitmq.password=${rabbitmq.password}
spring.rabbitmq.listener.type=${rabbitmq.type}
spring.rabbitmq.listener.simple.prefetch=${rabbitmq.prefetch}
spring.rabbitmq.listener.simple.max-concurrency=${rabbitmq.max-concurrency}
spring.rabbitmq.listener.simple.concurrency=${rabbitmq.concurrency}
# -------------------------------------------------
# QUEUE
# -------------------------------------------------
queue.certificate.interop.request.scncrcr019.m1014=${queue.certificate.interop.request.scncrcr019.m1014}
queue.certificate.interop.request.scncrcr019.m1017=${queue.certificate.interop.request.scncrcr019.m1017}
queue.certificate.interop.response.srncrcr020.m2014=${queue.certificate.interop.response.srncrcr020.m2014}
queue.certificate.interop.response.srncrcr020.m2017=${queue.certificate.interop.response.srncrcr020.m2017}
queue.certificate.interop.request.notification=${queue.certificate.interop.request.notification}
queue.certificate.interop.request.scncrcr019.m1014.concurrency=${queue.certificate.interop.request.scncrcr019.m1014.concurrency}
queue.certificate.interop.request.scncrcr019.m1017.concurrency=${queue.certificate.interop.request.scncrcr019.m1017.concurrency}
queue.certificate.interop.response.srncrcr020.m2014.concurrency=${queue.certificate.interop.response.srncrcr020.m2014.concurrency}
queue.certificate.interop.response.srncrcr020.m2017.concurrency=${queue.certificate.interop.response.srncrcr020.m2017.concurrency}
queue.certificate.interop.request.notification.concurrency=${queue.certificate.interop.request.notification.concurrency}
# -------------------------------------------------
# EMAIL
# -------------------------------------------------
scx.email.endpoint=${scx.email.endpoint}
# -------------------------------------------------
# H2H
# -------------------------------------------------
scx.h2h.base.dir=${scx.h2h.base.dir}
scx.h2h.base.request.dir=${scx.h2h.base.request.dir}
scx.h2h.base.response.dir=${scx.h2h.base.response.dir}
scx.h2h.servers=${scx.h2h.servers}
scx.h2h.endpoint=${scx.h2h.endpoint}
# -------------------------------------------------
# IO
# -------------------------------------------------
scx.io.servers=${scx.io.servers}
scx.io.endpoint=${scx.io.endpoint}
scx.io.notification.endpoint=${scx.io.notification.endpoint}
# -------------------------------------------------
# FILE API
# -------------------------------------------------
scx.support.file.upload=${scx.support.file.upload}
# -------------------------------------------------
# SUPPORT
# -------------------------------------------------
scx.payment.import.request.endpoint=${scx.payment.import.request.endpoint}
scx.payment.import.consult.endpoint=${scx.payment.import.consult.endpoint}
scx.support.gen.transaction.number.endpoint=${scx.support.gen.transaction.number.endpoint}
scx.support.gen.certificate.number.endpoint=${scx.support.gen.certificate.number.endpoint}